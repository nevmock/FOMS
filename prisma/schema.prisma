generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String          @id @default(uuid())
  email       String          @unique
  password    String?
  role        Role            @default(USER)
  created_at  DateTime?        @default(now())
  updated_at  DateTime?
  @@map("user")
}

model Employee {
  id          String    @id @default(uuid())
  company_id  String
  position_id String
  nip         String
  name        String
  tmt         DateTime
  gender      Gender
  whatsapp_number      String
  email      String     @unique
  created_at        DateTime?           @default(now())
  updated_at        DateTime?
  @@map("employee")
}

model Company {
  id                String             @id @default(uuid())
  name              String
  address           String
  code              String
  logo_uri          String
  Positions         Position[]
  created_at        DateTime?           @default(now())
  updated_at        DateTime?
  @@map("company")
}

model Level {
  id          String        @id @default(uuid())
  name        String
  detailPositions DetailPosition[]
  created_at        DateTime?           @default(now())
  updated_at        DateTime?
  @@map("level")
}

model Officer {
  id          String        @id @default(uuid())
  name        String
  detailPositions DetailPosition[]
  created_at        DateTime?           @default(now())
  updated_at        DateTime?
  @@map("officer")
}

model Position {
  id            String          @id @default(uuid())
  basic_salary  Float
  company_id    String?
  company       Company?         @relation(fields: [company_id], references: [id], onDelete: SetNull)
  detailPositions DetailPosition[]
  created_at        DateTime?   @default(now())
  updated_at        DateTime?
  @@map("position")
}

model DetailPosition {
  position_id     String      @unique
  level_id        String      @unique
  officer_id      String      @unique
  is_active       Boolean     @default(false)
  position      Position      @relation(fields: [position_id], references: [id])
  level         Level         @relation(fields: [level_id], references: [id])
  officer       Officer       @relation(fields: [officer_id], references: [id])
  @@map("detailPosition")
  @@unique([position_id, level_id, officer_id])
}

model Salary {
  id                  String    @id @default(uuid())
  employee_id         String
  month_salary        String
  position_allowance  Float
  bjps_allowance      Float
  tax_allowance       Float
  other_allowance     String    @db.MediumText
  position_deduction  Float
  bpjs_deduction      Float
  tax_deduction       Float
  other_deduction     String    @db.MediumText
  created_at        DateTime?           @default(now())
  updated_at        DateTime?
  @@map("salary")
}


enum Gender {
  MAN
  WOMAN
}

enum Role {
  USER
  STAFF
}